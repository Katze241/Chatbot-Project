from PIL import Image
from docx import Document
from google.colab import files
from PIL import Image, ImageOps, ImageEnhance
import re
import pandas as pd
import pytesseract
import io
import os

uploaded = files.upload()
docx_path = list(uploaded.keys())[0]

def extract_text_from_docx(docx_path):
    doc = Document(docx_path)

    # 텍스트
    full_text = []
    for para in doc.paragraphs:
        if para.text.strip():
            full_text.append(para.text.strip())

    print("\n")
    # 표를 Markdown 테이블로 변환
    for tbl_idx, table in enumerate(doc.tables, start=1):
        # 1) 셀 텍스트 수집 및 whitespace collapse
        data = []
        for row in table.rows:
            row_cells = []
            for cell in row.cells:
                txt = cell.text.strip()
                txt = re.sub(r'\s+', ' ', txt)   # 줄바꿈·다중공백 → 한 칸
                row_cells.append(txt)
            data.append(row_cells)

        if not data:
            continue

        # 2) DataFrame으로 변환
        df = pd.DataFrame(data[1:], columns=data[0])

        # 3) Markdown으로 삽입 (원하면 to_string 으로 plain ASCII 테이블도 가능)
        full_text.append(f"\n**테이블 {tbl_idx}**")
        full_text.append(df.to_markdown(index=False))

    # 이미지
    def preprocess_image_for_ocr(img):
        # 1. 흑백 변환
        img = img.convert("L")
        # 2. 크기 확대 (1.5배)
        img = img.resize((int(img.width * 1.5), int(img.height * 1.5)))
        # 3. 대비 높이기
        enhancer = ImageEnhance.Contrast(img)
        img = enhancer.enhance(2.0)
        # 4. 이진화 (160 기준)
        img = img.point(lambda x: 0 if x < 160 else 255, '1')
        return img.convert("RGB")

    image_texts = []
    rels = doc.part._rels
    for rel in rels:
        rel_obj = rels[rel]
        if "image" in rel_obj.target_ref:
            image_data = rel_obj.target_part.blob
            img = Image.open(io.BytesIO(image_data))
            preprocessed_img = preprocess_image_for_ocr(img)

            ocr_result = pytesseract.image_to_string(preprocessed_img, lang="kor+eng", config="--oem 3 --psm 6")

            if ocr_result.strip():
                image_texts.append("\n이미지 OCR 결과")
                image_texts.append(ocr_result.strip())

    if image_texts:
        full_text.append("\n".join(image_texts))

    return "\n".join(full_text)

text = extract_text_from_docx(docx_path)
print("추출된 Word 텍스트:\n")
print(text)

md_filename = 'text.md'
with open(md_filename, 'w', encoding='utf-8') as f:
    f.write(text)
files.download(md_filename)
