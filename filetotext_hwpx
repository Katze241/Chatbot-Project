from google.colab import files
from PIL import ImageFilter, ImageEnhance
import zipfile
import xml.etree.ElementTree as ET
import pytesseract
import io

uploaded = files.upload()
hwpx_path = list(uploaded.keys())[0]

def preprocess_image(img):
    img = img.convert("L")
    img = img.resize((int(img.width * 2), int(img.height * 2)))
    img = img.filter(ImageFilter.MedianFilter(size=3))
    enhancer = ImageEnhance.Contrast(img)
    img = enhancer.enhance(2.0)
    img = img.point(lambda x: 0 if x < 140 else 255, '1')
    return img.convert("RGB")

def extract_text_hwpx(hwpx_path: str) -> str:
    all_text = []
    with zipfile.ZipFile(hwpx_path, 'r') as zipf:
        # section0.xml 읽기
        xml_name = "Contents/section0.xml"
        if xml_name not in zipf.namelist():
            raise FileNotFoundError(f"{xml_name} not found.")
        root = ET.fromstring(zipf.read(xml_name))

        # 1) 단락 추출
        for elem in root.iter():
            tag = elem.tag.rsplit('}',1)[-1]
            if tag != 'p':
                continue
            txt = ''.join(elem.itertext()).strip()
            if txt:
                all_text.append(txt)

        # 2) 테이블 추출 (namespace 무시)
        for elem in root.iter():
            if elem.tag.split('}')[-1] == 'tbl':
                all_text.append("[표 시작]")
                # 각 tr
                for tr in elem:
                    if tr.tag.split('}')[-1] != 'tr':
                        continue
                    cells = []
                    for tc in tr:
                        if tc.tag.split('}')[-1] != 'tc':
                            continue
                        # 각 tc 내의 모든 p 텍스트 합치기
                        paras = []
                        for node in tc.iter():
                            if node.tag.split('}')[-1] == 'p':
                                t = ''.join(node.itertext()).strip()
                                if t:
                                    paras.append(t)
                        cells.append(' '.join(paras) or "__")
                    all_text.append('\t'.join(cells))
                all_text.append("[표 끝]")

        # 이미지 OCR
        for fname in zipf.namelist():
            if fname.startswith("Resources/Images/") and fname.lower().endswith((".png",".jpg",".jpeg")):
                img = Image.open(io.BytesIO(zipf.read(fname)))
                ocr = pytesseract.image_to_string(preprocess_image(img), lang="kor+eng",
                                                   config="--oem 3 --psm 6").strip()
                if ocr:
                    all_text.append(f"[이미지 OCR: {fname}]")
                    all_text.append(ocr)

    return "\n".join(all_text)


text = extract_text_hwpx(hwpx_path)
print("추출된 텍스트:\n")
print(text)

md_filename = 'text.md'
with open(md_filename, 'w', encoding='utf-8') as f:
    f.write(text)
files.download(md_filename)
